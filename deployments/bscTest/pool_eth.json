{
  "address": "0xF2f51672a793EaaD30D5444188297a5518A68cCa",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_stakedToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipPulled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipPushed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "RewardAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "RewardPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeRewardApplicable",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdateTime",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "periodFinish",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pullOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "pushOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerToken",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerTokenStored",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "reward",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "duration",
          "type": "uint64"
        }
      ],
      "name": "setRewardParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forWhom",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "stakeFor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakedToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRewards",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "userRewardPerTokenPaid",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "rewards",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb9d4565ec5adc5bac03ce225483a9b59e64bf101cd680805fb4ef0cd075500ac",
  "receipt": {
    "to": null,
    "from": "0xC7c4D99F149f40C8F13a5fF042C1b70A2B8042CB",
    "contractAddress": "0xF2f51672a793EaaD30D5444188297a5518A68cCa",
    "transactionIndex": 4,
    "gasUsed": "1273499",
    "logsBloom": "0x
    "blockHash": "0xf11727605eb8a30d82e0dc5400e06d890a44364a9a0076503ac51c508c7b50a5",
    "transactionHash": "0xb9d4565ec5adc5bac03ce225483a9b59e64bf101cd680805fb4ef0cd075500ac",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 19986907,
        "transactionHash": "0xb9d4565ec5adc5bac03ce225483a9b59e64bf101cd680805fb4ef0cd075500ac",
        "address": "0xF2f51672a793EaaD30D5444188297a5518A68cCa",
        "topics": [
          "0xea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c7c4d99f149f40c8f13a5ff042c1b70a2b8042cb"
        ],
        "data": "0x",
        "logIndex": 21,
        "blockHash": "0xf11727605eb8a30d82e0dc5400e06d890a44364a9a0076503ac51c508c7b50a5"
      }
    ],
    "blockNumber": 19986907,
    "cumulativeGasUsed": "2647219",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5EA5ECc825381c424a2303b109CD1dDb7Ffadf86",
    "0x0000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "bf1bf040c92f547210c04649fe2386b1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_stakedToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPulled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"pushOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"reward\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"duration\",\"type\":\"uint64\"}],\"name\":\"setRewardParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forWhom\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"stakeFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewards\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"userRewardPerTokenPaid\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rewards\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pullOwner()\":{\"details\":\"pull owner role from previous owner Can only be called by the account in owner queue.\"},\"pushOwner(address)\":{\"details\":\"push new account to new owner queue. Can only be called by the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Rewards.sol\":\"Rewards\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Rewards.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\r\\npragma solidity 0.8.12;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"./libs/Ownable.sol\\\";\\r\\nimport \\\"./StakedTokenWrapper.sol\\\";\\r\\n\\r\\ncontract Rewards is StakedTokenWrapper, Ownable {\\r\\n    IERC20 public rewardToken;\\r\\n    uint256 public rewardRate;\\r\\n    uint64 public periodFinish;\\r\\n    uint64 public lastUpdateTime;\\r\\n    uint128 public rewardPerTokenStored;\\r\\n    struct UserRewards {\\r\\n        uint128 userRewardPerTokenPaid;\\r\\n        uint128 rewards;\\r\\n    }\\r\\n    mapping(address => UserRewards) public userRewards;\\r\\n\\r\\n    event RewardAdded(uint256 reward);\\r\\n    event RewardPaid(address indexed user, uint256 reward);\\r\\n\\r\\n    constructor(IERC20 _rewardToken, IERC20 _stakedToken) {\\r\\n        rewardToken = _rewardToken;\\r\\n        stakedToken = _stakedToken;\\r\\n    }\\r\\n\\r\\n    modifier updateReward(address account) {\\r\\n        uint128 _rewardPerTokenStored = rewardPerToken();\\r\\n        lastUpdateTime = lastTimeRewardApplicable();\\r\\n        rewardPerTokenStored = _rewardPerTokenStored;\\r\\n        userRewards[account].rewards = earned(account);\\r\\n        userRewards[account].userRewardPerTokenPaid = _rewardPerTokenStored;\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function lastTimeRewardApplicable() public view returns (uint64) {\\r\\n        uint64 blockTimestamp = uint64(block.timestamp);\\r\\n        return blockTimestamp < periodFinish ? blockTimestamp : periodFinish;\\r\\n    }\\r\\n\\r\\n    function rewardPerToken() public view returns (uint128) {\\r\\n        uint256 totalStakedSupply = totalSupply;\\r\\n        if (totalStakedSupply == 0) {\\r\\n            return rewardPerTokenStored;\\r\\n        }\\r\\n        unchecked {\\r\\n            uint256 rewardDuration = lastTimeRewardApplicable()-lastUpdateTime;\\r\\n            return uint128(rewardPerTokenStored + rewardDuration*rewardRate*1e18/totalStakedSupply);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function earned(address account) public view returns (uint128) {\\r\\n        unchecked { \\r\\n            return uint128(balanceOf(account)*(rewardPerToken()-userRewards[account].userRewardPerTokenPaid)/1e18 + userRewards[account].rewards);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function stake(uint128 amount) external payable {\\r\\n        stakeFor(msg.sender, amount);\\r\\n    }\\r\\n\\r\\n    function stakeFor(address forWhom, uint128 amount) public payable override updateReward(forWhom) {\\r\\n        super.stakeFor(forWhom, amount);\\r\\n    }\\r\\n\\r\\n    function withdraw(uint128 amount) public override updateReward(msg.sender) {\\r\\n        super.withdraw(amount);\\r\\n    }\\r\\n\\r\\n    function exit() external {\\r\\n        getReward();\\r\\n        withdraw(uint128(balanceOf(msg.sender)));\\r\\n    }\\r\\n\\r\\n    function getReward() public updateReward(msg.sender) {\\r\\n        uint256 reward = earned(msg.sender);\\r\\n        if (reward > 0) {\\r\\n            userRewards[msg.sender].rewards = 0;\\r\\n            require(rewardToken.transfer(msg.sender, reward), \\\"reward transfer failed\\\");\\r\\n            emit RewardPaid(msg.sender, reward);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setRewardParams(uint128 reward, uint64 duration) external onlyOwner {\\r\\n        unchecked {\\r\\n            require(reward > 0);\\r\\n            rewardPerTokenStored = rewardPerToken();\\r\\n            uint64 blockTimestamp = uint64(block.timestamp);\\r\\n            uint256 maxRewardSupply = rewardToken.balanceOf(address(this));\\r\\n            if(rewardToken == stakedToken)\\r\\n                maxRewardSupply -= totalSupply;\\r\\n            uint256 leftover = 0;\\r\\n            if (blockTimestamp >= periodFinish) {\\r\\n                rewardRate = reward/duration;\\r\\n            } else {\\r\\n                uint256 remaining = periodFinish-blockTimestamp;\\r\\n                leftover = remaining*rewardRate;\\r\\n                rewardRate = (reward+leftover)/duration;\\r\\n            }\\r\\n            require(reward+leftover <= maxRewardSupply, \\\"not enough tokens\\\");\\r\\n            lastUpdateTime = blockTimestamp;\\r\\n            periodFinish = blockTimestamp+duration;\\r\\n            emit RewardAdded(reward);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function withdrawReward() external onlyOwner {\\r\\n        uint256 rewardSupply = rewardToken.balanceOf(address(this));\\r\\n        //ensure funds staked by users can't be transferred out\\r\\n        if(rewardToken == stakedToken)\\r\\n                rewardSupply -= totalSupply;\\r\\n        require(rewardToken.transfer(msg.sender, rewardSupply));\\r\\n        rewardRate = 0;\\r\\n        periodFinish = uint64(block.timestamp);\\r\\n    }\\r\\n}\\r\\n\\r\\n/*\\r\\n   ____            __   __        __   _\\r\\n  / __/__ __ ___  / /_ / /  ___  / /_ (_)__ __\\r\\n _\\\\ \\\\ / // // _ \\\\/ __// _ \\\\/ -_)/ __// / \\\\ \\\\ /\\r\\n/___/ \\\\_, //_//_/\\\\__//_//_/\\\\__/ \\\\__//_/ /_\\\\_\\\\\\r\\n     /___/\\r\\n\\r\\n* Synthetix: YFIRewards.sol\\r\\n*\\r\\n* Docs: https://docs.synthetix.io/\\r\\n*\\r\\n*\\r\\n* MIT License\\r\\n* ===========\\r\\n*\\r\\n* Copyright (c) 2020 Synthetix\\r\\n*\\r\\n* Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n* of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n* in the Software without restriction, including without limitation the rights\\r\\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n* copies of the Software, and to permit persons to whom the Software is\\r\\n* furnished to do so, subject to the following conditions:\\r\\n*\\r\\n* The above copyright notice and this permission notice shall be included in all\\r\\n* copies or substantial portions of the Software.\\r\\n*\\r\\n* THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n*/\",\"keccak256\":\"0xa55ff9889645bde76480072b000001fe3b9c94cb984256afe26ed559d11a45b4\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/StakedTokenWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\r\\npragma solidity 0.8.12;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ncontract StakedTokenWrapper {\\r\\n    uint256 public totalSupply;\\r\\n\\r\\n    mapping(address => uint256) private _balances;\\r\\n    IERC20 public stakedToken;\\r\\n    \\r\\n    event Staked(address indexed user, uint256 amount);\\r\\n    event Withdrawn(address indexed user, uint256 amount);\\r\\n\\r\\n    function balanceOf(address account) public view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    string constant _transferErrorMessage = \\\"staked token transfer failed\\\";\\r\\n    \\r\\n    function stakeFor(address forWhom, uint128 amount) public payable virtual {\\r\\n        IERC20 st = stakedToken;\\r\\n        if(st == IERC20(address(0))) { //eth\\r\\n            unchecked {\\r\\n                totalSupply += msg.value;\\r\\n                _balances[forWhom] += msg.value;\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            require(msg.value == 0, \\\"non-zero eth\\\");\\r\\n            require(amount > 0, \\\"Cannot stake 0\\\");\\r\\n            require(st.transferFrom(msg.sender, address(this), amount), _transferErrorMessage);\\r\\n\\t\\t\\tunchecked { \\r\\n                totalSupply += amount;\\r\\n                _balances[forWhom] += amount;\\r\\n            }\\r\\n        }\\r\\n        emit Staked(forWhom, amount);\\r\\n    }\\r\\n\\r\\n    function withdraw(uint128 amount) public virtual {\\r\\n        require(amount <= _balances[msg.sender], \\\"withdraw: balance is lower\\\");\\r\\n        unchecked {\\r\\n            _balances[msg.sender] -= amount;\\r\\n            totalSupply = totalSupply-amount;\\r\\n        }\\r\\n        IERC20 st = stakedToken;\\r\\n        if(st == IERC20(address(0))) { //eth\\r\\n\\t\\t\\tbool success;\\r\\n            (success, ) = msg.sender.call{value: amount}(\\\"\\\");\\r\\n            require(success, \\\"user eth transfer failure\\\");\\r\\n        }\\r\\n        else {\\r\\n            require(stakedToken.transfer(msg.sender, amount), _transferErrorMessage);\\r\\n        }\\r\\n        emit Withdrawn(msg.sender, amount);\\r\\n    }\\r\\n}\\r\\n\\r\\n/*\\r\\n   ____            __   __        __   _\\r\\n  / __/__ __ ___  / /_ / /  ___  / /_ (_)__ __\\r\\n _\\\\ \\\\ / // // _ \\\\/ __// _ \\\\/ -_)/ __// / \\\\ \\\\ /\\r\\n/___/ \\\\_, //_//_/\\\\__//_//_/\\\\__/ \\\\__//_/ /_\\\\_\\\\\\r\\n     /___/\\r\\n\\r\\n* Synthetix: YFIRewards.sol\\r\\n*\\r\\n* Docs: https://docs.synthetix.io/\\r\\n*\\r\\n*\\r\\n* MIT License\\r\\n* ===========\\r\\n*\\r\\n* Copyright (c) 2020 Synthetix\\r\\n*\\r\\n* Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n* of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n* in the Software without restriction, including without limitation the rights\\r\\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n* copies of the Software, and to permit persons to whom the Software is\\r\\n* furnished to do so, subject to the following conditions:\\r\\n*\\r\\n* The above copyright notice and this permission notice shall be included in all\\r\\n* copies or substantial portions of the Software.\\r\\n*\\r\\n* THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n*/\",\"keccak256\":\"0xb9999ef6cf30c6a9978038921e3e90e4e2e65f827c3da0fd23c28bb89bdc7a70\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/libs/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\r\\n\\r\\n// _bing modified from OpenZeppelin lib\\r\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\nabstract contract Ownable is Context {\\r\\n\\r\\n    address internal _owner;\\r\\n    address internal _newOwner;\\r\\n\\r\\n    event OwnershipPushed(address indexed previousOwner, address indexed newOwner);\\r\\n    event OwnershipPulled(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        _owner = msg.sender;\\r\\n        emit OwnershipPushed( address(0), _owner );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipPulled( _owner, address(0) );\\r\\n\\t\\t_owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev push new account to new owner queue.\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n\\tfunction pushOwner( address newOwner_ ) public onlyOwner() {\\r\\n        require( newOwner_ != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipPushed( _owner, newOwner_ );\\r\\n        _newOwner = newOwner_;\\r\\n    }\\r\\n\\t\\r\\n     /**\\r\\n     * @dev pull owner role from previous owner\\r\\n     * Can only be called by the account in owner queue.\\r\\n     */\\r\\n    function pullOwner() public {\\r\\n        require( msg.sender == _newOwner, \\\"Ownable: must be new owner to pull\\\");\\r\\n        emit OwnershipPulled( _owner, _newOwner );\\r\\n        _owner = _newOwner;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2a20f79c29e9e45659f3022a5f55dbd0e834bc014817908f076199e792aeba36\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061013f5760003560e01c806388fe2be8116100b6578063cc7a262e1161006f578063cc7a262e146103b4578063cd3daf9d146103d4578063df136d65146103e9578063e9fad8ee14610410578063ebe2b12b14610425578063f7c618c11461044557600080fd5b806388fe2be8146102f357806389ee4bde146103065780638da5cb5b14610326578063ac5a7d5c14610358578063c885bc5814610378578063c8f33c911461038d57600080fd5b80636cef16e6116101085780636cef16e61461023d57806370458d851461025257806370a0823114610265578063715018a61461029b5780637b0a47ee146102b057806380faa57d146102c657600080fd5b80628cc2621461014457806302387a7b146101815780630660f1e8146101a357806318160ddd146102045780633d18b91214610228575b600080fd5b34801561015057600080fd5b5061016461015f366004611330565b610465565b6040516001600160801b0390911681526020015b60405180910390f35b34801561018d57600080fd5b506101a161019c366004611369565b6104e2565b005b3480156101af57600080fd5b506101e46101be366004611330565b6008602052600090815260409020546001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610178565b34801561021057600080fd5b5061021a60005481565b604051908152602001610178565b34801561023457600080fd5b506101a1610581565b34801561024957600080fd5b506101a1610744565b6101a1610260366004611384565b61080c565b34801561027157600080fd5b5061021a610280366004611330565b6001600160a01b031660009081526001602052604090205490565b3480156102a757600080fd5b506101a16108ad565b3480156102bc57600080fd5b5061021a60065481565b3480156102d257600080fd5b506102db610921565b6040516001600160401b039091168152602001610178565b6101a1610301366004611369565b610955565b34801561031257600080fd5b506101a16103213660046113b7565b610962565b34801561033257600080fd5b506003546001600160a01b03165b6040516001600160a01b039091168152602001610178565b34801561036457600080fd5b506101a1610373366004611330565b610baf565b34801561038457600080fd5b506101a1610c9a565b34801561039957600080fd5b506007546102db90600160401b90046001600160401b031681565b3480156103c057600080fd5b50600254610340906001600160a01b031681565b3480156103e057600080fd5b50610164610dff565b3480156103f557600080fd5b5060075461016490600160801b90046001600160801b031681565b34801561041c57600080fd5b506101a1610e86565b34801561043157600080fd5b506007546102db906001600160401b031681565b34801561045157600080fd5b50600554610340906001600160a01b031681565b6001600160a01b0381166000908152600860205260408120546001600160801b03600160801b8204811691670de0b6b3a764000091166104a3610dff565b036001600160801b03166104cc856001600160a01b031660009081526001602052604090205490565b02816104da576104da6113fa565b040192915050565b3360006104ed610dff565b90506104f7610921565b600780546001600160801b03808516600160801b026001600160401b03948516600160401b0291909116939091169290921791909117905561053882610465565b6001600160a01b03831660009081526008602052604090206001600160801b038381169216600160801b026001600160801b03191691909117905561057c83610ea9565b505050565b33600061058c610dff565b9050610596610921565b600780546001600160801b03808516600160801b026001600160401b03948516600160401b029190911693909116929092179190911790556105d782610465565b6001600160a01b03831660009081526008602052604081206001600160801b038481169316600160801b026001600160801b0319169290921790915561061c33610465565b6001600160801b03169050801561057c57336000818152600860205260409081902080546001600160801b03169055600554905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf9190611410565b6107095760405162461bcd60e51b81526020600482015260166024820152751c995dd85c99081d1c985b9cd9995c8819985a5b195960521b60448201526064015b60405180910390fd5b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486906020015b60405180910390a2505050565b6004546001600160a01b031633146107a95760405162461bcd60e51b815260206004820152602260248201527f4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756044820152611b1b60f21b6064820152608401610700565b6004546003546040516001600160a01b0392831692909116907faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d90600090a3600454600380546001600160a01b0319166001600160a01b03909216919091179055565b816000610817610dff565b9050610821610921565b600780546001600160801b03808516600160801b026001600160401b03948516600160401b0291909116939091169290921791909117905561086282610465565b6001600160a01b03831660009081526008602052604090206001600160801b038381169216600160801b026001600160801b0319169190911790556108a78484611107565b50505050565b6003546001600160a01b031633146108d75760405162461bcd60e51b815260040161070090611432565b6003546040516000916001600160a01b0316907faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d908390a3600380546001600160a01b0319169055565b60075460009042906001600160401b039081169082161061094d576007546001600160401b031661094f565b805b91505090565b61095f338261080c565b50565b6003546001600160a01b0316331461098c5760405162461bcd60e51b815260040161070090611432565b6000826001600160801b0316116109a257600080fd5b6109aa610dff565b600780546001600160801b03928316600160801b0292169190911790556005546040516370a0823160e01b815230600482015242916000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a389190611467565b6002546005549192506001600160a01b0391821691161415610a5a5760005490035b6007546000906001600160401b0390811690841610610aa657836001600160401b0316856001600160801b031681610a9457610a946113fa565b046001600160801b0316600655610ae2565b506007546006546001600160401b0391821684900382169081029185166001600160801b038716830181610adc57610adc6113fa565b04600655505b8181866001600160801b0316011115610b315760405162461bcd60e51b81526020600482015260116024820152706e6f7420656e6f75676820746f6b656e7360781b6044820152606401610700565b600780546001600160801b031916600160401b6001600160401b038087169190910267ffffffffffffffff191691909117858701919091161790556040516001600160801b03861681527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a15050505050565b6003546001600160a01b03163314610bd95760405162461bcd60e51b815260040161070090611432565b6001600160a01b038116610c3e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610700565b6003546040516001600160a01b038084169216907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba90600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b03163314610cc45760405162461bcd60e51b815260040161070090611432565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d319190611467565b6002546005549192506001600160a01b0391821691161415610d5d57600054610d5a9082611480565b90505b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd29190611410565b610ddb57600080fd5b5060006006556007805467ffffffffffffffff1916426001600160401b0316179055565b6000805480610e20575050600754600160801b90046001600160801b031690565b600754600090600160401b90046001600160401b0316610e3e610921565b036001600160401b03169050816006548202670de0b6b3a76400000281610e6757610e676113fa565b6007546001600160801b03600160801b90910416919004019392505050565b610e8e610581565b33600090815260016020526040902054610ea7906104e2565b565b336000908152600160205260409020546001600160801b0382161115610f115760405162461bcd60e51b815260206004820152601a60248201527f77697468647261773a2062616c616e6365206973206c6f7765720000000000006044820152606401610700565b33600090815260016020526040812080546001600160801b0384169081900390915581540390556002546001600160a01b031680610ff25760405160009033906001600160801b038516908381818185875af1925050503d8060008114610f94576040519150601f19603f3d011682016040523d82523d6000602084013e610f99565b606091505b50508091505080610fec5760405162461bcd60e51b815260206004820152601960248201527f7573657220657468207472616e73666572206661696c757265000000000000006044820152606401610700565b506110c5565b60025460405163a9059cbb60e01b81523360048201526001600160801b03841660248201526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561104b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106f9190611410565b6040518060400160405280601c81526020017f7374616b656420746f6b656e207472616e73666572206661696c656400000000815250906110c35760405162461bcd60e51b815260040161070091906114a5565b505b6040516001600160801b038316815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a25050565b6002546001600160a01b03168061114457600080543490810182556001600160a01b038516825260016020526040909120805490910190556112d0565b34156111815760405162461bcd60e51b815260206004820152600c60248201526b0dcdedc5af4cae4de40cae8d60a31b6044820152606401610700565b6000826001600160801b0316116111cb5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610700565b6040516323b872dd60e01b81523360048201523060248201526001600160801b03831660448201526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015611226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124a9190611410565b6040518060400160405280601c81526020017f7374616b656420746f6b656e207472616e73666572206661696c6564000000008152509061129e5760405162461bcd60e51b815260040161070091906114a5565b50600080546001600160801b03841690810182556001600160a01b038516825260016020526040909120805490910190555b6040516001600160801b03831681526001600160a01b038416907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610737565b80356001600160a01b038116811461132b57600080fd5b919050565b60006020828403121561134257600080fd5b61134b82611314565b9392505050565b80356001600160801b038116811461132b57600080fd5b60006020828403121561137b57600080fd5b61134b82611352565b6000806040838503121561139757600080fd5b6113a083611314565b91506113ae60208401611352565b90509250929050565b600080604083850312156113ca57600080fd5b6113d383611352565b915060208301356001600160401b03811681146113ef57600080fd5b809150509250929050565b634e487b7160e01b600052601260045260246000fd5b60006020828403121561142257600080fd5b8151801515811461134b57600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561147957600080fd5b5051919050565b6000828210156114a057634e487b7160e01b600052601160045260246000fd5b500390565b600060208083528351808285015260005b818110156114d2578581018301518582016040015282016114b6565b818111156114e4576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212207f6d2bdb215fb8dd7889db7fdfe671f8baff898dc02b2271c5acc6e013cd508564736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pullOwner()": {
        "details": "pull owner role from previous owner Can only be called by the account in owner queue."
      },
      "pushOwner(address)": {
        "details": "push new account to new owner queue. Can only be called by the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1682,
        "contract": "contracts/Rewards.sol:Rewards",
        "label": "totalSupply",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1686,
        "contract": "contracts/Rewards.sol:Rewards",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1689,
        "contract": "contracts/Rewards.sol:Rewards",
        "label": "stakedToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)663"
      },
      {
        "astId": 1888,
        "contract": "contracts/Rewards.sol:Rewards",
        "label": "_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1890,
        "contract": "contracts/Rewards.sol:Rewards",
        "label": "_newOwner",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 1241,
        "contract": "contracts/Rewards.sol:Rewards",
        "label": "rewardToken",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC20)663"
      },
      {
        "astId": 1243,
        "contract": "contracts/Rewards.sol:Rewards",
        "label": "rewardRate",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1245,
        "contract": "contracts/Rewards.sol:Rewards",
        "label": "periodFinish",
        "offset": 0,
        "slot": "7",
        "type": "t_uint64"
      },
      {
        "astId": 1247,
        "contract": "contracts/Rewards.sol:Rewards",
        "label": "lastUpdateTime",
        "offset": 8,
        "slot": "7",
        "type": "t_uint64"
      },
      {
        "astId": 1249,
        "contract": "contracts/Rewards.sol:Rewards",
        "label": "rewardPerTokenStored",
        "offset": 16,
        "slot": "7",
        "type": "t_uint128"
      },
      {
        "astId": 1259,
        "contract": "contracts/Rewards.sol:Rewards",
        "label": "userRewards",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(UserRewards)1254_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)663": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(UserRewards)1254_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Rewards.UserRewards)",
        "numberOfBytes": "32",
        "value": "t_struct(UserRewards)1254_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(UserRewards)1254_storage": {
        "encoding": "inplace",
        "label": "struct Rewards.UserRewards",
        "members": [
          {
            "astId": 1251,
            "contract": "contracts/Rewards.sol:Rewards",
            "label": "userRewardPerTokenPaid",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 1253,
            "contract": "contracts/Rewards.sol:Rewards",
            "label": "rewards",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}